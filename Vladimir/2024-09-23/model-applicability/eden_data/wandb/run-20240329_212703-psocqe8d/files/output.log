


Loading checkpoint shards: 100%|███████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 2/2 [00:51<00:00, 25.84s/it]
/nfs/scistore19/alistgrp/apanfero/GPTAQ/.conda/lib/python3.10/site-packages/datasets/load.py:1429: FutureWarning: The repository for togethercomputer/RedPajama-Data-1T-Sample contains custom code which must be executed to correctly load the dataset. You can inspect the repository content at https://hf.co/datasets/togethercomputer/RedPajama-Data-1T-Sample
You can avoid this message in future by passing the argument `trust_remote_code=True`.
Passing `trust_remote_code=True` will be mandatory to load this dataset from the next major release of `datasets`.
  warnings.warn(
  0%|                                                                                                                                                                                                                                                                                         | 0/32 [00:00<?, ?it/s]
  0%|                                                                                                                                                                                                                                                                                          | 0/1 [00:00<?, ?it/s]
Starting ...
Traceback (most recent call last):
  File "/nfs/scistore19/alistgrp/apanfero/CompressionEntropy/gptq/llama2.py", line 340, in <module>
    quantizers = llama_sequential(model, dataloader, DEV)
  File "/nfs/scistore19/alistgrp/apanfero/GPTAQ/.conda/lib/python3.10/site-packages/torch/utils/_contextlib.py", line 115, in decorate_context
    return func(*args, **kwargs)
  File "/nfs/scistore19/alistgrp/apanfero/CompressionEntropy/gptq/llama2.py", line 133, in llama_sequential
    res = gptq[name].fasterquant(
  File "/nfs/scistore19/alistgrp/apanfero/CompressionEntropy/gptq/gptq.py", line 156, in fasterquant
    W1[:, i:] -= err1.matmul(Hinv1[i: i + step_size, i:].unsqueeze(0))
RuntimeError: output with shape [4096, 128] doesn't match the broadcast shape [1, 4096, 128]
0 self_attn.q_proj
Quantizing ...